// Generated by view binder compiler. Do not edit!
package com.touchizen.drawerwithbottomnavigation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.touchizen.drawerwithbottomnavigation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRequestParkingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView aBlockCard;

  @NonNull
  public final CardView bBlockCard;

  @NonNull
  public final CardView cBlockCard;

  @NonNull
  public final CardView dBlockCard;

  @NonNull
  public final CardView eBlockCard;

  @NonNull
  public final CardView fBlockCard;

  @NonNull
  public final CardView gBlockCard;

  @NonNull
  public final AppBarLayout layoutmain;

  @NonNull
  public final GridLayout parkingGrid;

  @NonNull
  public final ImageView parkingImage;

  @NonNull
  public final CardView selectParkingType;

  @NonNull
  public final Toolbar toolbarSearch;

  private ActivityRequestParkingBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView aBlockCard, @NonNull CardView bBlockCard, @NonNull CardView cBlockCard,
      @NonNull CardView dBlockCard, @NonNull CardView eBlockCard, @NonNull CardView fBlockCard,
      @NonNull CardView gBlockCard, @NonNull AppBarLayout layoutmain,
      @NonNull GridLayout parkingGrid, @NonNull ImageView parkingImage,
      @NonNull CardView selectParkingType, @NonNull Toolbar toolbarSearch) {
    this.rootView = rootView;
    this.aBlockCard = aBlockCard;
    this.bBlockCard = bBlockCard;
    this.cBlockCard = cBlockCard;
    this.dBlockCard = dBlockCard;
    this.eBlockCard = eBlockCard;
    this.fBlockCard = fBlockCard;
    this.gBlockCard = gBlockCard;
    this.layoutmain = layoutmain;
    this.parkingGrid = parkingGrid;
    this.parkingImage = parkingImage;
    this.selectParkingType = selectParkingType;
    this.toolbarSearch = toolbarSearch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRequestParkingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRequestParkingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_request_parking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRequestParkingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.a_block_card;
      CardView aBlockCard = rootView.findViewById(id);
      if (aBlockCard == null) {
        break missingId;
      }

      id = R.id.b_block_card;
      CardView bBlockCard = rootView.findViewById(id);
      if (bBlockCard == null) {
        break missingId;
      }

      id = R.id.c_block_card;
      CardView cBlockCard = rootView.findViewById(id);
      if (cBlockCard == null) {
        break missingId;
      }

      id = R.id.d_block_card;
      CardView dBlockCard = rootView.findViewById(id);
      if (dBlockCard == null) {
        break missingId;
      }

      id = R.id.e_block_card;
      CardView eBlockCard = rootView.findViewById(id);
      if (eBlockCard == null) {
        break missingId;
      }

      id = R.id.f_block_card;
      CardView fBlockCard = rootView.findViewById(id);
      if (fBlockCard == null) {
        break missingId;
      }

      id = R.id.g_block_card;
      CardView gBlockCard = rootView.findViewById(id);
      if (gBlockCard == null) {
        break missingId;
      }

      id = R.id.layoutmain;
      AppBarLayout layoutmain = rootView.findViewById(id);
      if (layoutmain == null) {
        break missingId;
      }

      id = R.id.parking_grid;
      GridLayout parkingGrid = rootView.findViewById(id);
      if (parkingGrid == null) {
        break missingId;
      }

      id = R.id.parking_image;
      ImageView parkingImage = rootView.findViewById(id);
      if (parkingImage == null) {
        break missingId;
      }

      id = R.id.select_parking_type;
      CardView selectParkingType = rootView.findViewById(id);
      if (selectParkingType == null) {
        break missingId;
      }

      id = R.id.toolbar_search;
      Toolbar toolbarSearch = rootView.findViewById(id);
      if (toolbarSearch == null) {
        break missingId;
      }

      return new ActivityRequestParkingBinding((RelativeLayout) rootView, aBlockCard, bBlockCard,
          cBlockCard, dBlockCard, eBlockCard, fBlockCard, gBlockCard, layoutmain, parkingGrid,
          parkingImage, selectParkingType, toolbarSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
