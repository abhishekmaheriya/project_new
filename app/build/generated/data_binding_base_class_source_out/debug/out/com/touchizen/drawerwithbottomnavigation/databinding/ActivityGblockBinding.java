// Generated by view binder compiler. Do not edit!
package com.touchizen.drawerwithbottomnavigation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.touchizen.drawerwithbottomnavigation.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGblockBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView b1ParkingGblock;

  @NonNull
  public final CardView b2ParkingGblock;

  @NonNull
  public final CardView b3ParkingGblock;

  @NonNull
  public final CardView b4ParkingGblock;

  @NonNull
  public final CardView b5ParkingGblock;

  @NonNull
  public final CardView b6ParkingGblock;

  @NonNull
  public final CardView b7ParkingGblock;

  @NonNull
  public final CardView bikeParkingGblock;

  @NonNull
  public final CardView c1ParkingGblock;

  @NonNull
  public final CardView c2ParkingGblock;

  @NonNull
  public final CardView c3ParkingGblock;

  @NonNull
  public final CardView c4ParkingGblock;

  @NonNull
  public final CardView c5ParkingGblock;

  @NonNull
  public final CardView c6ParkingGblock;

  @NonNull
  public final CardView c7ParkingGblock;

  @NonNull
  public final CardView carParkingGblock;

  @NonNull
  public final CircleImageView gblockBikeImage;

  @NonNull
  public final CircleImageView gblockCarImage;

  @NonNull
  public final AppBarLayout layoutmainGblock;

  @NonNull
  public final GridLayout parkingGridBikeGblock;

  @NonNull
  public final GridLayout parkingGridCarGblock;

  @NonNull
  public final Toolbar toolbarSearchGblock;

  private ActivityGblockBinding(@NonNull RelativeLayout rootView, @NonNull CardView b1ParkingGblock,
      @NonNull CardView b2ParkingGblock, @NonNull CardView b3ParkingGblock,
      @NonNull CardView b4ParkingGblock, @NonNull CardView b5ParkingGblock,
      @NonNull CardView b6ParkingGblock, @NonNull CardView b7ParkingGblock,
      @NonNull CardView bikeParkingGblock, @NonNull CardView c1ParkingGblock,
      @NonNull CardView c2ParkingGblock, @NonNull CardView c3ParkingGblock,
      @NonNull CardView c4ParkingGblock, @NonNull CardView c5ParkingGblock,
      @NonNull CardView c6ParkingGblock, @NonNull CardView c7ParkingGblock,
      @NonNull CardView carParkingGblock, @NonNull CircleImageView gblockBikeImage,
      @NonNull CircleImageView gblockCarImage, @NonNull AppBarLayout layoutmainGblock,
      @NonNull GridLayout parkingGridBikeGblock, @NonNull GridLayout parkingGridCarGblock,
      @NonNull Toolbar toolbarSearchGblock) {
    this.rootView = rootView;
    this.b1ParkingGblock = b1ParkingGblock;
    this.b2ParkingGblock = b2ParkingGblock;
    this.b3ParkingGblock = b3ParkingGblock;
    this.b4ParkingGblock = b4ParkingGblock;
    this.b5ParkingGblock = b5ParkingGblock;
    this.b6ParkingGblock = b6ParkingGblock;
    this.b7ParkingGblock = b7ParkingGblock;
    this.bikeParkingGblock = bikeParkingGblock;
    this.c1ParkingGblock = c1ParkingGblock;
    this.c2ParkingGblock = c2ParkingGblock;
    this.c3ParkingGblock = c3ParkingGblock;
    this.c4ParkingGblock = c4ParkingGblock;
    this.c5ParkingGblock = c5ParkingGblock;
    this.c6ParkingGblock = c6ParkingGblock;
    this.c7ParkingGblock = c7ParkingGblock;
    this.carParkingGblock = carParkingGblock;
    this.gblockBikeImage = gblockBikeImage;
    this.gblockCarImage = gblockCarImage;
    this.layoutmainGblock = layoutmainGblock;
    this.parkingGridBikeGblock = parkingGridBikeGblock;
    this.parkingGridCarGblock = parkingGridCarGblock;
    this.toolbarSearchGblock = toolbarSearchGblock;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGblockBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGblockBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_gblock, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGblockBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b1_parking_gblock;
      CardView b1ParkingGblock = rootView.findViewById(id);
      if (b1ParkingGblock == null) {
        break missingId;
      }

      id = R.id.b2_parking_gblock;
      CardView b2ParkingGblock = rootView.findViewById(id);
      if (b2ParkingGblock == null) {
        break missingId;
      }

      id = R.id.b3_parking_gblock;
      CardView b3ParkingGblock = rootView.findViewById(id);
      if (b3ParkingGblock == null) {
        break missingId;
      }

      id = R.id.b4_parking_gblock;
      CardView b4ParkingGblock = rootView.findViewById(id);
      if (b4ParkingGblock == null) {
        break missingId;
      }

      id = R.id.b5_parking_gblock;
      CardView b5ParkingGblock = rootView.findViewById(id);
      if (b5ParkingGblock == null) {
        break missingId;
      }

      id = R.id.b6_parking_gblock;
      CardView b6ParkingGblock = rootView.findViewById(id);
      if (b6ParkingGblock == null) {
        break missingId;
      }

      id = R.id.b7_parking_gblock;
      CardView b7ParkingGblock = rootView.findViewById(id);
      if (b7ParkingGblock == null) {
        break missingId;
      }

      id = R.id.bike_parking_gblock;
      CardView bikeParkingGblock = rootView.findViewById(id);
      if (bikeParkingGblock == null) {
        break missingId;
      }

      id = R.id.c1_parking_gblock;
      CardView c1ParkingGblock = rootView.findViewById(id);
      if (c1ParkingGblock == null) {
        break missingId;
      }

      id = R.id.c2_parking_gblock;
      CardView c2ParkingGblock = rootView.findViewById(id);
      if (c2ParkingGblock == null) {
        break missingId;
      }

      id = R.id.c3_parking_gblock;
      CardView c3ParkingGblock = rootView.findViewById(id);
      if (c3ParkingGblock == null) {
        break missingId;
      }

      id = R.id.c4_parking_gblock;
      CardView c4ParkingGblock = rootView.findViewById(id);
      if (c4ParkingGblock == null) {
        break missingId;
      }

      id = R.id.c5_parking_gblock;
      CardView c5ParkingGblock = rootView.findViewById(id);
      if (c5ParkingGblock == null) {
        break missingId;
      }

      id = R.id.c6_parking_gblock;
      CardView c6ParkingGblock = rootView.findViewById(id);
      if (c6ParkingGblock == null) {
        break missingId;
      }

      id = R.id.c7_parking_gblock;
      CardView c7ParkingGblock = rootView.findViewById(id);
      if (c7ParkingGblock == null) {
        break missingId;
      }

      id = R.id.car_parking_gblock;
      CardView carParkingGblock = rootView.findViewById(id);
      if (carParkingGblock == null) {
        break missingId;
      }

      id = R.id.gblock_bike_image;
      CircleImageView gblockBikeImage = rootView.findViewById(id);
      if (gblockBikeImage == null) {
        break missingId;
      }

      id = R.id.gblock_car_image;
      CircleImageView gblockCarImage = rootView.findViewById(id);
      if (gblockCarImage == null) {
        break missingId;
      }

      id = R.id.layoutmain_gblock;
      AppBarLayout layoutmainGblock = rootView.findViewById(id);
      if (layoutmainGblock == null) {
        break missingId;
      }

      id = R.id.parking_grid_bike_gblock;
      GridLayout parkingGridBikeGblock = rootView.findViewById(id);
      if (parkingGridBikeGblock == null) {
        break missingId;
      }

      id = R.id.parking_grid_car_gblock;
      GridLayout parkingGridCarGblock = rootView.findViewById(id);
      if (parkingGridCarGblock == null) {
        break missingId;
      }

      id = R.id.toolbar_search_gblock;
      Toolbar toolbarSearchGblock = rootView.findViewById(id);
      if (toolbarSearchGblock == null) {
        break missingId;
      }

      return new ActivityGblockBinding((RelativeLayout) rootView, b1ParkingGblock, b2ParkingGblock,
          b3ParkingGblock, b4ParkingGblock, b5ParkingGblock, b6ParkingGblock, b7ParkingGblock,
          bikeParkingGblock, c1ParkingGblock, c2ParkingGblock, c3ParkingGblock, c4ParkingGblock,
          c5ParkingGblock, c6ParkingGblock, c7ParkingGblock, carParkingGblock, gblockBikeImage,
          gblockCarImage, layoutmainGblock, parkingGridBikeGblock, parkingGridCarGblock,
          toolbarSearchGblock);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
